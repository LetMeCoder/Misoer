#if !canImport(ObjectiveC)
import XCTest

extension AttributeParseText {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributeParseText = [
        ("testCanStartWithEq", testCanStartWithEq),
        ("testDropsSlashFromAttributeName", testDropsSlashFromAttributeName),
        ("testHandlesNewLinesAndReturns", testHandlesNewLinesAndReturns),
        ("testMoreAttributeUnescapes", testMoreAttributeUnescapes),
        ("testParsesBooleanAttributes", testParsesBooleanAttributes),
        ("testParsesEmptyString", testParsesEmptyString),
        ("testParsesRoughAttributeString", testParsesRoughAttributeString),
        ("testStrictAttributeUnescapes", testStrictAttributeUnescapes),
    ]
}

extension AttributeTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributeTest = [
        ("testHTML", testHTML),
        ("testWithSupplementaryCharacterInAttributeKeyAndValue", testWithSupplementaryCharacterInAttributeKeyAndValue),
    ]
}

extension AttributesTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AttributesTest = [
        ("testHTML", testHTML),
        ("testIterator", testIterator),
        ("testIteratorEmpty", testIteratorEmpty),
        ("testRemoveCaseSensitive", testRemoveCaseSensitive),
    ]
}

extension CSSTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CSSTest = [
        ("testEmpty", testEmpty),
        ("testFirstChild", testFirstChild),
        ("testFirstOfType", testFirstOfType),
        ("testLastChild", testLastChild),
        ("testLastOfType", testLastOfType),
        ("testNthChildAdvanced", testNthChildAdvanced),
        ("testNthChildSimple", testNthChildSimple),
        ("testNthLastChild", testNthLastChild),
        ("testNthLastChildAdvanced", testNthLastChildAdvanced),
        ("testNthLastOfTypeAdvanced", testNthLastOfTypeAdvanced),
        ("testNthLastOfTypeSimple", testNthLastOfTypeSimple),
        ("testNthOfTypeAdvanced", testNthOfTypeAdvanced),
        ("testNthOfTypeSimple", testNthOfTypeSimple),
        ("testNthOfTypeUnknown", testNthOfTypeUnknown),
        ("testOnlyChild", testOnlyChild),
        ("testOnlyOfType", testOnlyOfType),
    ]
}

extension CharacterReaderTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CharacterReaderTest = [
        ("testAdvance", testAdvance),
        ("testConsume", testConsume),
        ("testConsumeLetterSequence", testConsumeLetterSequence),
        ("testConsumeLetterThenDigitSequence", testConsumeLetterThenDigitSequence),
        ("testConsumeToAny", testConsumeToAny),
        ("testConsumeToChar", testConsumeToChar),
        ("testConsumeToEnd", testConsumeToEnd),
        ("testConsumeToString", testConsumeToString),
        ("testContainsIgnoreCase", testContainsIgnoreCase),
        ("testMark", testMark),
        ("testMatches", testMatches),
        ("testMatchesAny", testMatchesAny),
        ("testMatchesIgnoreCase", testMatchesIgnoreCase),
        ("testNextIndexOfChar", testNextIndexOfChar),
        ("testNextIndexOfString", testNextIndexOfString),
        ("testNextIndexOfUnmatched", testNextIndexOfUnmatched),
        ("testUnconsume", testUnconsume),
    ]
}

extension CleanerTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CleanerTest = [
        ("testAddsTagOnAttributesIfNotSet", testAddsTagOnAttributesIfNotSet),
        ("testBasicBehavior", testBasicBehavior),
        ("testBasicWithImages", testBasicWithImages),
        ("testCleanAnchorProtocol", testCleanAnchorProtocol),
        ("testCleanJavascriptHref", testCleanJavascriptHref),
        ("testCleansInternationalText", testCleansInternationalText),
        ("testDropComments", testDropComments),
        ("testDropImageScript", testDropImageScript),
        ("testDropScript", testDropScript),
        ("testDropsUnresolvableRelativeLinks", testDropsUnresolvableRelativeLinks),
        ("testDropUnknownTags", testDropUnknownTags),
        ("testDropXMLProc", testDropXMLProc),
        ("testHandlesAllPseudoTag", testHandlesAllPseudoTag),
        ("testHandlesControlCharactersAfterTagName", testHandlesControlCharactersAfterTagName),
        ("testHandlesCustomProtocols", testHandlesCustomProtocols),
        ("testHandlesEmptyAttributes", testHandlesEmptyAttributes),
        ("testHandlesFramesets", testHandlesFramesets),
        ("testIsValidBodyHTML", testIsValidBodyHTML),
        ("testIsValidDocument", testIsValidDocument),
        ("testPreservesRelativeLinksIfConfigured", testPreservesRelativeLinksIfConfigured),
        ("testRelaxed", testRelaxed),
        ("testRemoveAttrs", testRemoveAttrs),
        ("testRemoveEnforcedAttrs", testRemoveEnforcedAttrs),
        ("testRemoveProtocols", testRemoveProtocols),
        ("testRemoveTags", testRemoveTags),
        ("testResolvesRelativeLinks", testResolvesRelativeLinks),
        ("testScriptTagInWhiteList", testScriptTagInWhiteList),
        ("testSimpleBehavior", testSimpleBehavior),
        ("testSupplyOutputSettings", testSupplyOutputSettings),
    ]
}

/*
extension ConnectionTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ConnectionTest = [
        ("testDontIgnoreContentType", testDontIgnoreContentType),
        ("testDontIgnoreHTTPErrors", testDontIgnoreHTTPErrors),
        ("testExpiredTLSFails", testExpiredTLSFails),
        ("testExpiredTLSSucceedsIfValidationDisabled", testExpiredTLSSucceedsIfValidationDisabled),
        ("testFollowsRedirects", testFollowsRedirects),
        ("testGETChangeParams", testGETChangeParams),
        ("testGETEmptyParamsArray", testGETEmptyParamsArray),
        ("testGETEmptyParamsDictionary", testGETEmptyParamsDictionary),
        ("testGETEncodeParams", testGETEncodeParams),
        ("testGETParamsArray", testGETParamsArray),
        ("testGETParamsDictionary", testGETParamsDictionary),
        ("testGETParamsOneAtATime", testGETParamsOneAtATime),
        ("testIgnoreContentType", testIgnoreContentType),
        ("testIgnoreHTTPErrors", testIgnoreHTTPErrors),
        ("testMaxBodySize", testMaxBodySize),
        ("testMaxBodySizeUnicode", testMaxBodySizeUnicode),
        ("testPOSTBody", testPOSTBody),
        ("testPOSTChangeParams", testPOSTChangeParams),
        ("testPOSTEncodeParams", testPOSTEncodeParams),
        ("testPOSTMutipart", testPOSTMutipart),
        ("testPOSTParamsArray", testPOSTParamsArray),
        ("testPOSTParamsDictionary", testPOSTParamsDictionary),
        ("testPOSTParamsEmptyArray", testPOSTParamsEmptyArray),
        ("testPOSTParamsEmptyDictionary", testPOSTParamsEmptyDictionary),
        ("testPOSTParamsOneAtATime", testPOSTParamsOneAtATime),
        ("testSelfSignedTLSFails", testSelfSignedTLSFails),
        ("testSelfSignedTLSSucceedsIfValidationDisabled", testSelfSignedTLSSucceedsIfValidationDisabled),
        ("testSimpleRequest", testSimpleRequest),
        ("testValidTLS", testValidTLS),
    ]
}
*/

extension DocumentTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentTest = [
        ("testDocumentsWithSameContentAreEqual", testDocumentsWithSameContentAreEqual),
        ("testDocumentsWithSameContentAreVerifiable", testDocumentsWithSameContentAreVerifiable),
        ("testHtmlAndXmlSyntax", testHtmlAndXmlSyntax),
        ("testHtmlAppendable", testHtmlAppendable),
        ("testMetaCharsetUpdatedDisabledPerDefault", testMetaCharsetUpdatedDisabledPerDefault),
        ("testMetaCharsetUpdateDisabled", testMetaCharsetUpdateDisabled),
        ("testMetaCharsetUpdateDisabledNoChanges", testMetaCharsetUpdateDisabledNoChanges),
        ("testMetaCharsetUpdateEnabledAfterCharsetChange", testMetaCharsetUpdateEnabledAfterCharsetChange),
        ("testMetaCharsetUpdateIso8859", testMetaCharsetUpdateIso8859),
        ("testMetaCharsetUpdateUtf8", testMetaCharsetUpdateUtf8),
        ("testMetaCharsetUpdateXmlDisabled", testMetaCharsetUpdateXmlDisabled),
        ("testMetaCharsetUpdateXmlIso8859", testMetaCharsetUpdateXmlIso8859),
        ("testMetaCharsetUpdateXmlUtf8", testMetaCharsetUpdateXmlUtf8),
        ("testNormalizingStructure", testNormalizingStructure),
        ("testOutputEncoding", testOutputEncoding),
        ("testSetTextPreservesDocumentStructure", testSetTextPreservesDocumentStructure),
        ("testThai", testThai),
        ("testTitles", testTitles),
        ("testXhtmlReferences", testXhtmlReferences),
    ]
}

extension DocumentTypeTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentTypeTest = [
        ("testOuterHtmlGeneration", testOuterHtmlGeneration),
        ("testRoundTrip", testRoundTrip),
    ]
}

extension ElementTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ElementTest = [
        ("testAddBooleanAttribute", testAddBooleanAttribute),
        ("testAddNewElement", testAddNewElement),
        ("testAddNewHtml", testAddNewHtml),
        ("testAddNewText", testAddNewText),
        ("testAppendMustCorrectlyMoveChildrenInsideOneParentElement", testAppendMustCorrectlyMoveChildrenInsideOneParentElement),
        ("testAppendRowToTable", testAppendRowToTable),
        ("testBrHasSpace", testBrHasSpace),
        ("testChainedRemoveAttributes", testChainedRemoveAttributes),
        ("testChildrenElements", testChildrenElements),
        ("testClassDomMethods", testClassDomMethods),
        ("testClassNames", testClassNames),
        ("testClassUpdates", testClassUpdates),
        ("testContainerOutput", testContainerOutput),
        ("testCssPath", testCssPath),
        ("testDataSet", testDataSet),
        ("testElementByTagName", testElementByTagName),
        ("testElementIsNotASiblingOfItself", testElementIsNotASiblingOfItself),
        ("testElementSiblingIndex", testElementSiblingIndex),
        ("testElementSiblingIndexSameContent", testElementSiblingIndexSameContent),
        ("testEmptyElementFormatHtml", testEmptyElementFormatHtml),
        ("testFormatHtml", testFormatHtml),
        ("testFormatOutline", testFormatOutline),
        ("testGetChildText", testGetChildText),
        ("testGetDataNodes", testGetDataNodes),
        ("testGetElementById", testGetElementById),
        ("testGetElementsByTagName", testGetElementsByTagName),
        ("testGetElementsWithAttribute", testGetElementsWithAttribute),
        ("testGetElementsWithAttributeDash", testGetElementsWithAttributeDash),
        ("testGetElementsWithAttributeValue", testGetElementsWithAttributeValue),
        ("testGetElementsWithClass", testGetElementsWithClass),
        ("testGetNamespacedElementsByTag", testGetNamespacedElementsByTag),
        ("testGetParents", testGetParents),
        ("testGetSiblings", testGetSiblings),
        ("testGetSiblingsWithDuplicateContent", testGetSiblingsWithDuplicateContent),
        ("testGetText", testGetText),
        ("testGetTextNodes", testGetTextNodes),
        ("testHasClassDomMethods", testHasClassDomMethods),
        ("testHashAndEqualsAndValue", testHashAndEqualsAndValue),
        ("testHashcodeIsStableWithContentChanges", testHashcodeIsStableWithContentChanges),
        ("testHasText", testHasText),
        ("testHtmlContainsOuter", testHtmlContainsOuter),
        ("testInnerHtml", testInnerHtml),
        ("testInsertChildrenAtPosition", testInsertChildrenAtPosition),
        ("testIs", testIs),
        ("testKeepsPreText", testKeepsPreText),
        ("testManipulateTextNodes", testManipulateTextNodes),
        ("testMoveByAppend", testMoveByAppend),
        ("testNamespacedElements", testNamespacedElements),
        ("testNoIndentOnScriptAndStyle", testNoIndentOnScriptAndStyle),
        ("testNormalisesText", testNormalisesText),
        ("testNotPretty", testNotPretty),
        ("testOuterHtml", testOuterHtml),
        ("testPrependElement", testPrependElement),
        ("testPrependNewHtml", testPrependNewHtml),
        ("testPrependRowToTable", testPrependRowToTable),
        ("testPrependText", testPrependText),
        ("testRelativeUrls", testRelativeUrls),
        ("testSetHtml", testSetHtml),
        ("testSetHtmlTitle", testSetHtmlTitle),
        ("testSetIndent", testSetIndent),
        ("testSetText", testSetText),
        ("testTagNameSet", testTagNameSet),
        ("testWrap", testWrap),
        ("testWrapWithRemainder", testWrapWithRemainder),
    ]
}

extension ElementsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ElementsTest = [
        ("testAbsAttr", testAbsAttr),
        ("testAfter", testAfter),
        ("testAttr", testAttr),
        ("testAttributes", testAttributes),
        ("testBefore", testBefore),
        ("testClasses", testClasses),
        ("testClassWithHyphen", testClassWithHyphen),
        ("testEachAttr", testEachAttr),
        ("testEachText", testEachText),
        ("testEmpty", testEmpty),
        ("testEq", testEq),
        ("testFilter", testFilter),
        ("testForms", testForms),
        ("testHasAbsAttr", testHasAbsAttr),
        ("testHasAttr", testHasAttr),
        ("testHasClassCaseInsensitive", testHasClassCaseInsensitive),
        ("testHasText", testHasText),
        ("testHtml", testHtml),
        ("testIs", testIs),
        ("testNot", testNot),
        ("testOuterHtml", testOuterHtml),
        ("testParents", testParents),
        ("testRemove", testRemove),
        ("testSetHtml", testSetHtml),
        ("testSiblings", testSiblings),
        ("testTagNameSet", testTagNameSet),
        ("testText", testText),
        ("testTraverse", testTraverse),
        ("testUnwrap", testUnwrap),
        ("testUnwrapKeepsSpace", testUnwrapKeepsSpace),
        ("testUnwrapP", testUnwrapP),
        ("testVal", testVal),
        ("testWrap", testWrap),
        ("testWrapDiv", testWrapDiv),
    ]
}

extension EntititesTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EntititesTest = [
        ("testCaseSensitive", testCaseSensitive),
        ("testEscape", testEscape),
        ("testEscapedSupplementary", testEscapedSupplementary),
        ("testEscapesGtInXmlAttributesButNotInHtml", testEscapesGtInXmlAttributesButNotInHtml),
        ("testEscapeSupplementaryCharacter", testEscapeSupplementaryCharacter),
        ("testGetByName", testGetByName),
        ("testLetterDigitEntities", testLetterDigitEntities),
        ("testNoSpuriousDecodes", testNoSpuriousDecodes),
        ("testNotMissingMultis", testNotMissingMultis),
        ("testNotMissingSupplementals", testNotMissingSupplementals),
        ("testQuoteReplacements", testQuoteReplacements),
        ("testStrictUnescape", testStrictUnescape),
        ("testUnescape", testUnescape),
        ("testUnescapeMultiChars", testUnescapeMultiChars),
        ("testXhtml", testXhtml),
    ]
}

extension FormElementTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FormElementTest = [
        ("testAdoptedFormsRetainInputs", testAdoptedFormsRetainInputs),
        ("testControlsAddedAfterParseAreLinkedWithForms", testControlsAddedAfterParseAreLinkedWithForms),
        ("testCreatesFormData", testCreatesFormData),
        ("testFormsAddedAfterParseAreFormElements", testFormsAddedAfterParseAreFormElements),
        ("testHasAssociatedControls", testHasAssociatedControls),
        ("testUsesOnForCheckboxValueIfNoValueSet", testUsesOnForCheckboxValueIfNoValueSet),
    ]
}

extension HTMLParserTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTMLParserTest = [
        ("testAssociatedFormControlsWithDisjointForms", testAssociatedFormControlsWithDisjointForms),
        ("testCanPreserveAttributeCase", testCanPreserveAttributeCase),
        ("testCanPreserveBothCase", testCanPreserveBothCase),
        ("testCanPreserveTagCase", testCanPreserveTagCase),
        ("testCommentBeforeHtml", testCommentBeforeHtml),
        ("testConvertsImageToImg", testConvertsImageToImg),
        ("testCreatesDocumentStructure", testCreatesDocumentStructure),
        ("testCreatesFormElements", testCreatesFormElements),
        ("testCreatesStructureFromBodySnippet", testCreatesStructureFromBodySnippet),
        ("testDiscardsNakedTds", testDiscardsNakedTds),
        ("testDoesNotCreateImplicitLists", testDoesNotCreateImplicitLists),
        ("testDoesNotFindShortestMatchingEntity", testDoesNotFindShortestMatchingEntity),
        ("testDropsUnterminatedAttribute", testDropsUnterminatedAttribute),
        ("testDropsUnterminatedTag", testDropsUnterminatedTag),
        ("testEmptyTdTag", testEmptyTdTag),
        ("testFindsCharsetInMalformedMeta", testFindsCharsetInMalformedMeta),
        ("testHandleNullContextInParseFragment", testHandleNullContextInParseFragment),
        ("testHandles0CharacterAsText", testHandles0CharacterAsText),
        ("testHandlesBaseTags", testHandlesBaseTags),
        ("testHandlesBaseWithoutHref", testHandlesBaseWithoutHref),
        ("testHandlesBlocksInDefinitions", testHandlesBlocksInDefinitions),
        ("testHandlesCdata", testHandlesCdata),
        ("testHandlesCommentsInTable", testHandlesCommentsInTable),
        ("testHandlesControlCodeInAttributeName", testHandlesControlCodeInAttributeName),
        ("testHandlesDataOnlyTags", testHandlesDataOnlyTags),
        ("testHandlesEscapedData", testHandlesEscapedData),
        ("testHandlesEscapedScript", testHandlesEscapedScript),
        ("testHandlesFrames", testHandlesFrames),
        ("testHandlesImplicitCaptionClose", testHandlesImplicitCaptionClose),
        ("testHandlesInputInTable", testHandlesInputInTable),
        ("testHandlesInvalidDoctypes", testHandlesInvalidDoctypes),
        ("testHandlesInvalidStartTags", testHandlesInvalidStartTags),
        ("testHandlesJavadocFont", testHandlesJavadocFont),
        ("testHandlesKnownEmptyBlocks", testHandlesKnownEmptyBlocks),
        ("testHandlesManyChildren", testHandlesManyChildren),
        ("testHandlesMisnestedTagsBI", testHandlesMisnestedTagsBI),
        ("testHandlesMisnestedTagsBP", testHandlesMisnestedTagsBP),
        ("testHandlesMultiClosingBody", testHandlesMultiClosingBody),
        ("testHandlesNestedImplicitTable", testHandlesNestedImplicitTable),
        ("testHandlesNewlinesAndWhitespaceInTag", testHandlesNewlinesAndWhitespaceInTag),
        ("testHandlesNullInComments", testHandlesNullInComments),
        ("testHandlesNullInData", testHandlesNullInData),
        ("testHandlesProtocolRelativeUrl", testHandlesProtocolRelativeUrl),
        ("testHandlesQuotesInCommentsInScripts", testHandlesQuotesInCommentsInScripts),
        ("testHandlesSolidusAtAttributeEnd", testHandlesSolidusAtAttributeEnd),
        ("testHandlesSolidusInA", testHandlesSolidusInA),
        ("testHandlesSpanInTbody", testHandlesSpanInTbody),
        ("testHandlesTagsInTextarea", testHandlesTagsInTextarea),
        ("testHandlesTbodyTable", testHandlesTbodyTable),
        ("testHandlesTextAfterData", testHandlesTextAfterData),
        ("testHandlesTextArea", testHandlesTextArea),
        ("testHandlesUnclosedAnchors", testHandlesUnclosedAnchors),
        ("testHandlesUnclosedCdataAtEOF", testHandlesUnclosedCdataAtEOF),
        ("testHandlesUnclosedDefinitionLists", testHandlesUnclosedDefinitionLists),
        ("testHandlesUnclosedFormattingElements", testHandlesUnclosedFormattingElements),
        ("testHandlesUnclosedRawtextAtEof", testHandlesUnclosedRawtextAtEof),
        ("testHandlesUnclosedScriptAtEof", testHandlesUnclosedScriptAtEof),
        ("testHandlesUnclosedTitle", testHandlesUnclosedTitle),
        ("testHandlesUnclosedTitleAtEof", testHandlesUnclosedTitleAtEof),
        ("testHandlesUnexpectedMarkupInTables", testHandlesUnexpectedMarkupInTables),
        ("testHandlesUnknownInlineTags", testHandlesUnknownInlineTags),
        ("testHandlesUnknownNamespaceTags", testHandlesUnknownNamespaceTags),
        ("testHandlesUnknownTags", testHandlesUnknownTags),
        ("testHandlesWhatWgExpensesTableExample", testHandlesWhatWgExpensesTableExample),
        ("testHandlesWhitespaceInoDocType", testHandlesWhitespaceInoDocType),
        ("testHandlesXmlDeclarationAsBogusComment", testHandlesXmlDeclarationAsBogusComment),
        ("testIgnoresContentAfterFrameset", testIgnoresContentAfterFrameset),
        ("testIgnoresDupeEndTrTag", testIgnoresDupeEndTrTag),
        ("testNoImplicitFormForTextAreas", testNoImplicitFormForTextAreas),
        ("testNormalisedBodyAfterContent", testNormalisedBodyAfterContent),
        ("testNormalisesDocument", testNormalisesDocument),
        ("testNormalisesEmptyDocument", testNormalisesEmptyDocument),
        ("testNormalisesHeadlessBody", testNormalisesHeadlessBody),
        ("testNoTableDirectInTable", testNoTableDirectInTable),
        ("testParsesBodyFragment", testParsesBodyFragment),
        ("testParsesComments", testParsesComments),
        ("testParsesQuiteRoughAttributes", testParsesQuiteRoughAttributes),
        ("testParsesRoughAttributes", testParsesRoughAttributes),
        ("testParsesSimpleDocument", testParsesSimpleDocument),
        ("testParsesUnterminatedComments", testParsesUnterminatedComments),
        ("testParsesUnterminatedOption", testParsesUnterminatedOption),
        ("testParsesUnterminatedTextarea", testParsesUnterminatedTextarea),
        ("testPreservesSpaceInScript", testPreservesSpaceInScript),
        ("testPreservesSpaceInTextArea", testPreservesSpaceInTextArea),
        ("testReconstructFormattingElements", testReconstructFormattingElements),
        ("testReconstructFormattingElementsInTable", testReconstructFormattingElementsInTable),
        ("testRelaxedBaseEntityMatchAndStrictExtendedMatch", testRelaxedBaseEntityMatchAndStrictExtendedMatch),
        ("testTestAFlowContents", testTestAFlowContents),
        ("testTestFontFlowContents", testTestFontFlowContents),
        ("testTestFragment", testTestFragment),
        ("testTestHeaderContents", testTestHeaderContents),
        ("testTestHgroup", testTestHgroup),
        ("testTestHtmlLowerCase", testTestHtmlLowerCase),
        ("testTestNoImagesInNoScriptInHead", testTestNoImagesInNoScriptInHead),
        ("testTestNormalisesIsIndex", testTestNormalisesIsIndex),
        ("testTestReinsertionModeForThCelss", testTestReinsertionModeForThCelss),
        ("testTestRelaxedTags", testTestRelaxedTags),
        ("testTestSpaceAfterTag", testTestSpaceAfterTag),
        ("testTestSpanContents", testTestSpanContents),
        ("testTestSupportsNonAsciiTags", testTestSupportsNonAsciiTags),
        ("testTestSupportsPartiallyNonAsciiTags", testTestSupportsPartiallyNonAsciiTags),
        ("testTestUsingSingleQuotesInQueries", testTestUsingSingleQuotesInQueries),
        ("testTracksErrorsWhenRequested", testTracksErrorsWhenRequested),
        ("testTracksLimitedErrorsWhenRequested", testTracksLimitedErrorsWhenRequested),
    ]
}

extension NodeTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NodeTest = [
        ("testAbsHandlesDotFromIndex", testAbsHandlesDotFromIndex),
        ("testAbsHandlesRelativeQuery", testAbsHandlesRelativeQuery),
        ("testAfter", testAfter),
        ("testBefore", testBefore),
        ("testHandleAbsOnFileUris", testHandleAbsOnFileUris),
        ("testHandlesAbsOnImage", testHandlesAbsOnImage),
        ("testHandlesAbsOnProtocolessAbsoluteUris", testHandlesAbsOnProtocolessAbsoluteUris),
        ("testHandlesAbsPrefix", testHandlesAbsPrefix),
        ("testHandlesAbsPrefixOnHasAttr", testHandlesAbsPrefixOnHasAttr),
        ("testHandlesBaseUri", testHandlesBaseUri),
        ("testhHandleAbsOnLocalhostFileUris", testhHandleAbsOnLocalhostFileUris),
        ("testLiteralAbsPrefix", testLiteralAbsPrefix),
        ("testOrphanNodeReturnsNilForSiblingElements", testOrphanNodeReturnsNilForSiblingElements),
        ("testOwnerDocument", testOwnerDocument),
        ("testRemove", testRemove),
        ("testReplace", testReplace),
        ("testRoot", testRoot),
        ("testSetBaseUriIsRecursive", testSetBaseUriIsRecursive),
        ("testTraverse", testTraverse),
        ("testUnwrap", testUnwrap),
        ("testUnwrapNoChildren", testUnwrapNoChildren),
    ]
}

extension ParserSettingsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParserSettingsTest = [
        ("testCaseSupport", testCaseSupport),
    ]
}

extension QueryParserTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__QueryParserTest = [
        ("testExceptionOnUncloseAttribute", testExceptionOnUncloseAttribute),
        ("testOrGetsCorrectPrecedence", testOrGetsCorrectPrecedence),
        ("testParsesMultiCorrectly", testParsesMultiCorrectly),
        ("testParsesSingleQuoteInContains", testParsesSingleQuoteInContains),
    ]
}

extension SelectorTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SelectorTest = [
        ("testAdjacentSiblings", testAdjacentSiblings),
        ("testAdjacentSiblingsWithId", testAdjacentSiblingsWithId),
        ("testAllElements", testAllElements),
        ("testAllWithClass", testAllWithClass),
        ("testAnd", testAnd),
        ("testAttributeWithBrackets", testAttributeWithBrackets),
        ("testByAttribute", testByAttribute),
        ("testByAttributeRegex", testByAttributeRegex),
        ("testByAttributeRegexCharacterClass", testByAttributeRegexCharacterClass),
        ("testByAttributeRegexCombined", testByAttributeRegexCombined),
        ("testByAttributeStarting", testByAttributeStarting),
        ("testByClass", testByClass),
        ("testByClassCaseInsensitive", testByClassCaseInsensitive),
        ("testById", testById),
        ("testByTag", testByTag),
        ("testCaseInsensitive", testCaseInsensitive),
        ("testCharactersInIdAndClass", testCharactersInIdAndClass),
        ("testCombinedWithContains", testCombinedWithContains),
        ("testContainsData", testContainsData),
        ("testContainsOwn", testContainsOwn),
        ("testContainsWithQuote", testContainsWithQuote),
        ("testDeeperDescendant", testDeeperDescendant),
        ("testDescendant", testDescendant),
        ("testGeneralSiblings", testGeneralSiblings),
        ("testGroupOr", testGroupOr),
        ("testGroupOrAttribute", testGroupOrAttribute),
        ("testHandlesCommasInSelector", testHandlesCommasInSelector),
        ("testMatches", testMatches),
        ("testMatchesOwn", testMatchesOwn),
        ("testMixCombinator", testMixCombinator),
        ("testMixCombinatorGroup", testMixCombinatorGroup),
        ("testMultiChildDescent", testMultiChildDescent),
        ("testNamespacedTag", testNamespacedTag),
        ("testNestedHas", testNestedHas),
        ("testNotAdjacent", testNotAdjacent),
        ("testNotAll", testNotAll),
        ("testNotClass", testNotClass),
        ("testNotParas", testNotParas),
        ("testParentChildElement", testParentChildElement),
        ("testParentChildStar", testParentChildStar),
        ("testParentWithClassChild", testParentWithClassChild),
        ("testPseudoBetween", testPseudoBetween),
        ("testPseudoCombined", testPseudoCombined),
        ("testPseudoContains", testPseudoContains),
        ("testPseudoEquals", testPseudoEquals),
        ("testPseudoGreaterThan", testPseudoGreaterThan),
        ("testPseudoHas", testPseudoHas),
        ("testPseudoLessThan", testPseudoLessThan),
        ("testPsuedoContainsWithParentheses", testPsuedoContainsWithParentheses),
        ("testRelaxedTags", testRelaxedTags),
        ("testSelectClassWithSpace", testSelectClassWithSpace),
        ("testSelectSameElements", testSelectSameElements),
        ("testSelectSupplementaryCharacter", testSelectSupplementaryCharacter),
        ("testSupportsLeadingCombinator", testSupportsLeadingCombinator),
        ("testWildcardNamespacedTag", testWildcardNamespacedTag),
    ]
}

extension TagTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TagTest = [
        ("testCanBeInsensitive", testCanBeInsensitive),
        ("testDefaultSemantics", testDefaultSemantics),
        ("testDivSemantics", testDivSemantics),
        ("testEquality", testEquality),
        ("testImgSemantics", testImgSemantics),
        ("testIsCaseSensitive", testIsCaseSensitive),
        ("testPSemantics", testPSemantics),
        ("testTrims", testTrims),
    ]
}

extension TextNodeTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TextNodeTest = [
        ("testBlank", testBlank),
        ("testSplitAndEmbolden", testSplitAndEmbolden),
        ("testSplitText", testSplitText),
        ("testTextBean", testTextBean),
        ("testWithSupplementaryCharacter", testWithSupplementaryCharacter),
    ]
}

extension TokenQueueTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TokenQueueTest = [
        ("testAddFirst", testAddFirst),
        ("testChompBalanced", testChompBalanced),
        ("testChompBalancedMatchesAsMuchAsPossible", testChompBalancedMatchesAsMuchAsPossible),
        ("testChompEscapedBalanced", testChompEscapedBalanced),
        ("testChompToIgnoreCase", testChompToIgnoreCase),
        ("testUnescape", testUnescape),
    ]
}

extension XMLTreeBuilderTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XMLTreeBuilderTest = [
        ("testCanNormalizeCase", testCanNormalizeCase),
        ("testCaseSensitiveDeclaration", testCaseSensitiveDeclaration),
        ("testCommentAndDocType", testCommentAndDocType),
        ("testCreatesValidProlog", testCreatesValidProlog),
        ("testDoesHandleEOFInTag", testDoesHandleEOFInTag),
        ("testDoesNotForceSelfClosingKnownTags", testDoesNotForceSelfClosingKnownTags),
        ("testHandlesXMLDeclarationAsDeclaration", testHandlesXMLDeclarationAsDeclaration),
        ("testParseDeclarationAttributes", testParseDeclarationAttributes),
        ("testPopToClose", testPopToClose),
        ("testPreservesCaseByDefault", testPreservesCaseByDefault),
        ("testSimpleXMLParse", testSimpleXMLParse),
        ("testSupplyParserToJsoupClass", testSupplyParserToJsoupClass),
        ("testXMLFragment", testXMLFragment),
        ("testXMLParseDefaultsToHtmlOutputSyntax", testXMLParseDefaultsToHtmlOutputSyntax),
    ]
}

extension XPathTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XPathTest = [
        ("testAny", testAny),
        ("testAnyChildren", testAnyChildren),
        ("testChildAt", testChildAt),
        ("testChildNavigation", testChildNavigation),
        ("testHasAttributeNamed", testHasAttributeNamed),
        ("testHasAttributeWithValueDoubleQuote", testHasAttributeWithValueDoubleQuote),
        ("testHasAttributeWithValueSingleQuote", testHasAttributeWithValueSingleQuote),
        ("testHasChildrenNamed", testHasChildrenNamed),
        ("testHasChildrenWithTextValueDoubleQuote", testHasChildrenWithTextValueDoubleQuote),
        ("testHasChildrenWithTextValueSingleQuote", testHasChildrenWithTextValueSingleQuote),
        ("testParentNavigation", testParentNavigation),
        ("testParentOutOfDocument", testParentOutOfDocument),
        ("testTag", testTag),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AttributeParseText.__allTests__AttributeParseText),
        testCase(AttributeTest.__allTests__AttributeTest),
        testCase(AttributesTest.__allTests__AttributesTest),
        testCase(CSSTest.__allTests__CSSTest),
        testCase(CharacterReaderTest.__allTests__CharacterReaderTest),
        testCase(CleanerTest.__allTests__CleanerTest),
//        testCase(ConnectionTest.__allTests__ConnectionTest),
        testCase(DocumentTest.__allTests__DocumentTest),
        testCase(DocumentTypeTest.__allTests__DocumentTypeTest),
        testCase(ElementTest.__allTests__ElementTest),
        testCase(ElementsTest.__allTests__ElementsTest),
        testCase(EntititesTest.__allTests__EntititesTest),
        testCase(FormElementTest.__allTests__FormElementTest),
        testCase(HTMLParserTest.__allTests__HTMLParserTest),
        testCase(NodeTest.__allTests__NodeTest),
        testCase(ParserSettingsTest.__allTests__ParserSettingsTest),
        testCase(QueryParserTest.__allTests__QueryParserTest),
        testCase(SelectorTest.__allTests__SelectorTest),
        testCase(TagTest.__allTests__TagTest),
        testCase(TextNodeTest.__allTests__TextNodeTest),
        testCase(TokenQueueTest.__allTests__TokenQueueTest),
        testCase(XMLTreeBuilderTest.__allTests__XMLTreeBuilderTest),
        testCase(XPathTest.__allTests__XPathTest),
    ]
}
#endif
